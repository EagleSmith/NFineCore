// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NFineCore.EntityFramework;

namespace NFineCore.EntityFramework.Migrations
{
    [DbContext(typeof(NFineCoreDbContext))]
    [Migration("20190125150050_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.Area", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool?>("DeletedMark");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<string>("EnCode");

                    b.Property<bool?>("EnabledMark");

                    b.Property<string>("FullName");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("Layers");

                    b.Property<long>("ParentId");

                    b.Property<string>("SimpleSpelling");

                    b.Property<int?>("SortCode");

                    b.HasKey("Id");

                    b.ToTable("sys_area");
                });

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.Attach", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool?>("DeletedMark");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("FileExt");

                    b.Property<string>("FileName");

                    b.Property<string>("FilePath");

                    b.Property<long>("FileSize");

                    b.Property<string>("FileType");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("ThumbPath");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.ToTable("sys_attach");
                });

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.Dict", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool?>("DeletedMark");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<string>("EnCode");

                    b.Property<bool?>("EnabledMark");

                    b.Property<string>("FullName");

                    b.Property<bool?>("IsTree");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("Layers");

                    b.Property<long>("ParentId");

                    b.Property<int?>("SortCode");

                    b.HasKey("Id");

                    b.ToTable("sys_dict");
                });

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.DictItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool?>("DeletedMark");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<long>("DictId");

                    b.Property<bool?>("EnabledMark");

                    b.Property<bool?>("IsDefault");

                    b.Property<string>("ItemCode");

                    b.Property<string>("ItemName");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("Layers");

                    b.Property<long>("ParentId");

                    b.Property<string>("SimpleSpelling");

                    b.Property<int?>("SortCode");

                    b.HasKey("Id");

                    b.HasIndex("DictId");

                    b.ToTable("sys_dictitem");
                });

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.LoginLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool?>("DeletedMark");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<string>("IpAddress");

                    b.Property<string>("IpAddressLocation");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<bool?>("OperateResult");

                    b.Property<DateTime?>("OperateTime");

                    b.Property<string>("OperateType");

                    b.Property<long>("UserId");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("sys_loginlog");
                });

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.OperateLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Action");

                    b.Property<string>("Area");

                    b.Property<string>("Controller");

                    b.Property<DateTime?>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool?>("DeletedMark");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Method");

                    b.Property<DateTime?>("OperateTime");

                    b.Property<string>("Parameter");

                    b.Property<long>("UserId");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("sys_operatelog");
                });

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.Organize", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<bool?>("AllowDelete");

                    b.Property<bool?>("AllowEdit");

                    b.Property<string>("AreaId");

                    b.Property<string>("CategoryId");

                    b.Property<DateTime?>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool?>("DeletedMark");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("Email");

                    b.Property<string>("EnCode");

                    b.Property<bool?>("EnabledMark");

                    b.Property<string>("Fax");

                    b.Property<string>("FullName");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("Layers");

                    b.Property<string>("ManagerId");

                    b.Property<string>("MobilePhone");

                    b.Property<long>("ParentId");

                    b.Property<string>("ShortName");

                    b.Property<int?>("SortCode");

                    b.Property<string>("TelePhone");

                    b.Property<string>("Type");

                    b.Property<string>("WeChat");

                    b.HasKey("Id");

                    b.ToTable("sys_organize");
                });

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool?>("DeletedMark");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("ObjectId");

                    b.Property<string>("ObjectType");

                    b.Property<long>("ResourceId");

                    b.Property<int?>("SortCode");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.ToTable("sys_permission");
                });

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.Position", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("AllowDelete");

                    b.Property<bool?>("AllowEdit");

                    b.Property<DateTime?>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool?>("DeletedMark");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<string>("EnCode");

                    b.Property<bool?>("EnabledMark");

                    b.Property<string>("FullName");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("OrganizeId");

                    b.Property<int?>("SortCode");

                    b.HasKey("Id");

                    b.ToTable("sys_position");
                });

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.Resource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("AllowDelete");

                    b.Property<bool?>("AllowEdit");

                    b.Property<DateTime?>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool?>("DeletedMark");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<string>("EnCode");

                    b.Property<bool?>("EnabledMark");

                    b.Property<string>("FullName");

                    b.Property<string>("Icon");

                    b.Property<bool?>("IsDisplay");

                    b.Property<bool?>("IsExpand");

                    b.Property<bool?>("IsMenu");

                    b.Property<bool?>("IsPublic");

                    b.Property<string>("JsEvent");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("Layers");

                    b.Property<int?>("Location");

                    b.Property<string>("Module");

                    b.Property<string>("ObjectType");

                    b.Property<long>("ParentId");

                    b.Property<string>("PermissionCode");

                    b.Property<int?>("SortCode");

                    b.Property<bool?>("Split");

                    b.Property<string>("Target");

                    b.Property<string>("UrlAddress");

                    b.HasKey("Id");

                    b.ToTable("sys_resource");
                });

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("AllowDelete");

                    b.Property<bool?>("AllowEdit");

                    b.Property<DateTime?>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool?>("DeletedMark");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<string>("EnCode");

                    b.Property<bool?>("EnabledMark");

                    b.Property<string>("FullName");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("OrganizeId");

                    b.Property<int?>("SortCode");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("OrganizeId");

                    b.ToTable("sys_role");
                });

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Birthday");

                    b.Property<long>("CompanyId");

                    b.Property<DateTime?>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool?>("DeletedMark");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<long>("DepartmentId");

                    b.Property<string>("Description");

                    b.Property<string>("Email");

                    b.Property<bool?>("EnabledMark");

                    b.Property<byte?>("Gender");

                    b.Property<bool?>("IsAdministrator");

                    b.Property<DateTime?>("LastLoginTime");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("MobilePhone");

                    b.Property<string>("NickName");

                    b.Property<string>("Password");

                    b.Property<long>("PositionId");

                    b.Property<string>("RealName");

                    b.Property<string>("SecretKey");

                    b.Property<string>("TelePhone");

                    b.Property<byte?>("Type");

                    b.Property<string>("UserName");

                    b.Property<string>("WeChat");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.ToTable("sys_user");
                });

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.UserRole", b =>
                {
                    b.Property<long>("UserId");

                    b.Property<long>("RoleId");

                    b.Property<bool?>("DeletedMark");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("sys_userrole");
                });

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.Attach", b =>
                {
                    b.HasOne("NFineCore.EntityFramework.Models.SystemManage.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");
                });

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.DictItem", b =>
                {
                    b.HasOne("NFineCore.EntityFramework.Models.SystemManage.Dict", "Dict")
                        .WithMany("DictItems")
                        .HasForeignKey("DictId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.Permission", b =>
                {
                    b.HasOne("NFineCore.EntityFramework.Models.SystemManage.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.Role", b =>
                {
                    b.HasOne("NFineCore.EntityFramework.Models.SystemManage.Organize", "Organize")
                        .WithMany()
                        .HasForeignKey("OrganizeId");
                });

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.User", b =>
                {
                    b.HasOne("NFineCore.EntityFramework.Models.SystemManage.Organize", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NFineCore.EntityFramework.Models.SystemManage.Organize", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NFineCore.EntityFramework.Models.SystemManage.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NFineCore.EntityFramework.Models.SystemManage.UserRole", b =>
                {
                    b.HasOne("NFineCore.EntityFramework.Models.SystemManage.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NFineCore.EntityFramework.Models.SystemManage.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
